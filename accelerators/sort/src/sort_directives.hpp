/* Copyright 2017 Columbia University, SLD Group */

#ifndef __SORT_DIRECTIVES_HPP__
#define __SORT_DIRECTIVES_HPP__

#if defined(HLS_DIRECTIVES_BASIC)
#define HLS_LOAD_INPUT_BATCH_LOOP		\
	HLS_UNROLL_LOOP(OFF)
#define HLS_LOAD_INPUT_LOOP			\
	HLS_UNROLL_LOOP(OFF)
#define HLS_LOAD_INPUT_PLM_WRITE					\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-load-mem-access")

#define HLS_STORE_OUTPUT_BATCH_LOOP		\
	HLS_UNROLL_LOOP(OFF)
#define HLS_STORE_OUTPUT_LOOP			\
	HLS_UNROLL_LOOP(OFF)
#define HLS_STORE_OUTPUT_PLM_READ					\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-store-mem-access")

#define HLS_RB_SORT_LOOP			\
	HLS_UNROLL_LOOP(OFF)
#define HLS_RB_MAP_REGS				\
	HLS_FLATTEN_ARRAY(regs)
#define HLS_RB_MAIN				\
	HLS_UNROLL_LOOP(OFF)
#define HLS_RB_CHAIN_SELECT			\
	HLS_UNROLL_LOOP(ON)
#define HLS_RB_RW_CHUNK							\
	HLS_UNROLL_LOOP(OFF);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-RB_RW_CHUNK-mem-access")
#define HLS_RB_INSERTION_OUTER			\
	HLS_UNROLL_LOOP(OFF)
#define HLS_RB_INSERTION_EVEN						\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-RB_INSERTION_EVEN-mem-access")
#define HLS_RB_INSERTION_ODD						\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-RB_INSERTION_ODD-mem-access")
#define HLS_RB_W_LAST_CHUNKS_OUTER		\
	HLS_UNROLL_LOOP(OFF)
#define HLS_RB_W_LAST_CHUNKS_INNER		\
	HLS_UNROLL_LOOP(OFF);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-RB_W_LAST_CHUNKS_INNER-mem-access")

#define HLS_MERGE_SORT_LOOP				\
	HLS_UNROLL_LOOP(OFF)
#define HLS_MERGE_SORT_MAP_REGS				\
	HLS_FLATTEN_ARRAY(head);			\
	HLS_FLATTEN_ARRAY(fidx);			\
	HLS_FLATTEN_ARRAY(pop);				\
	HLS_FLATTEN_ARRAY(shift);			\
	HLS_FLATTEN_ARRAY(regs);			\
	HLS_FLATTEN_ARRAY(regs_in)
#define HLS_MERGE_INIT_ZERO_FIDX					\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_INIT_ZERO_FIDX-mem-access")
#define HLS_MERGE_RD_FIRST_ELEMENTS					\
	HLS_UNROLL_LOOP(OFF);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_RD_FIRST_ELEMENTS-mem-access")
#define HLS_MERGE_MAIN							\
	HLS_UNROLL_LOOP(OFF)
#define HLS_MERGE_COMPARE						\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_COMPARE")
#define HLS_MERGE_SHIFT							\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_SHIFT")
#define HLS_MERGE_SEQ							\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_SEQ")
#define HLS_MERGE_WR_LAST_ELEMENTS					\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_WR_LAST_ELEMENTS-mem-access")
#define HLS_MERGE_SET_POP						\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_SET_POP")
#define HLS_MERGE_DO_POP						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_DO_POP-mem-access")
#define HLS_MERGE_RESTORE_ZERO_POP					\
	HLS_UNROLL_LOOP(ON);						\
	HLS_CONSTRAIN_LATENCY(0, 1, "constraint-MERGE_RESTORE_ZERO_POP")
#define HLS_MERGE_NO_MERGE						\
	HLS_UNROLL_LOOP(OFF);						\
	HLS_CONSTRAIN_LATENCY(1, 2, "constraint-MERGE_NO_MERGE-mem-access")

#else
#define HLS_LOAD_INPUT_BATCH_LOOP
#define HLS_LOAD_INPUT_LOOP
#define HLS_LOAD_INPUT_PLM_WRITE

#define HLS_STORE_OUTPUT_BATCH_LOOP
#define HLS_STORE_OUTPUT_LOOP
#define HLS_STORE_OUTPUT_PLM_READ

#define HLS_RB_SORT_LOOP
#define HLS_RB_MAP_REGS
#define HLS_RB_MAIN
#define HLS_RB_CHAIN_SELECT
#define HLS_RB_RW_CHUNK
#define HLS_RB_INSERTION_OUTER
#define HLS_RB_INSERTION_EVEN
#define HLS_RB_INSERTION_ODD
#define HLS_RB_W_LAST_CHUNKS_OUTER
#define HLS_RB_W_LAST_CHUNKS_INNER

#define HLS_MERGE_SORT_LOOP
#define HLS_MERGE_SORT_MAP_REGS
#define HLS_MERGE_INIT_ZERO_FIDX
#define HLS_MERGE_RD_FIRST_ELEMENTS
#define HLS_MERGE_MAIN
#define HLS_MERGE_COMPARE
#define HLS_MERGE_SHIFT
#define HLS_MERGE_SEQ
#define HLS_MERGE_WR_LAST_ELEMENTS
#define HLS_MERGE_SET_POP
#define HLS_MERGE_DO_POP
#define HLS_MERGE_RESTORE_ZERO_POP
#define HLS_MERGE_NO_MERGE
#endif

#endif /* __SORT_DIRECTIVES_HPP_ */
